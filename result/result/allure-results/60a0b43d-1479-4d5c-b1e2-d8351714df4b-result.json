{"name": "test_order_pay[canUseCashCoupon:1-FR_NO:1 AMOUNT:98]", "status": "failed", "statusDetails": {"message": "AssertionError: None\nassert 28.26 == 28.260000000000005\n +  where 28.260000000000005 = float(28.260000000000005)\n +    where 28.260000000000005 = <bound method Discount.pay_amount of <base.discount_rule.Discount object at 0x0375D690>>()\n +      where <bound method Discount.pay_amount of <base.discount_rule.Discount object at 0x0375D690>> = <base.discount_rule.Discount object at 0x0375D690>.pay_amount", "trace": "self = <test_self_pay.TestSelfPay object at 0x037786F0>\nself_pay = <page.self_to_pay.SelfPay object at 0x03778370>\ncase = {'优惠设置': [{'canUseCashCoupon:1': {'canUseCashCoupon': 1, 'isBalabceDiscount': 1, 'privilegeType': 1, 'specialDiscountType': 1, ...}}], '会员名': '马锈南', '手机号': 13882130978, '油枪选择': 1, ...}\nmember_info = {'AMOUNT': Decimal('154.09'), 'GRADE_TYPE': 0, 'HQ_ID': '16548', 'HQ_MEMBER_GRADE_ID': 33585, ...}\n\n    @allure.story(U'自助买单--订单支付')\n    def test_order_pay(self, self_pay, case, member_info):\n        with allure.step(U'确认订单信息'):\n            order_oil = self_pay.get_text(('xpath', self_pay.Element[U'待支付油品']))\n            order_amt = float(self_pay.get_text(('xpath', self_pay.Element[U'支付订单金额'])))\n            TestSelfPay.tmp.update({U'订单ID': custom.get_params(self_pay.get_cur_url())['selfPayOrderId']})\n            assert TestSelfPay.tmp[U'油品'] == order_oil, log.error(U'油品错误')\n            assert TestSelfPay.tmp[U'订单金额'] == order_amt, log.error(U'金额错误')\n        with allure.step(U'确认优惠金额'):\n            dis_rule = discount_rule.Discount(case[U'油枪选择'], case[U'金额'])\n            discount = float(self_pay.get_text(('xpath', self_pay.Element[U'优惠金额'])))\n            TestSelfPay.tmp.update({U'优惠金额': discount})\n            assert discount == float(dis_rule.actual_discount()), log.error(U'优惠金额错误')\n            pay_amt = float(self_pay.get_text(('xpath', self_pay.Element[U'待支付金额'])))\n            TestSelfPay.tmp.update({U'支付金额': pay_amt})\n>           assert pay_amt == float(dis_rule.pay_amount()), log.error(U'支付金额错误')\nE           AssertionError: None\nE           assert 28.26 == 28.260000000000005\nE            +  where 28.260000000000005 = float(28.260000000000005)\nE            +    where 28.260000000000005 = <bound method Discount.pay_amount of <base.discount_rule.Discount object at 0x0375D690>>()\nE            +      where <bound method Discount.pay_amount of <base.discount_rule.Discount object at 0x0375D690>> = <base.discount_rule.Discount object at 0x0375D690>.pay_amount\n\ntestcase\\test_self_pay.py:115: AssertionError"}, "description": "测试微信自助买单功能", "steps": [{"name": "确认订单信息", "status": "passed", "start": 1645107067063, "stop": 1645107067117}, {"name": "确认优惠金额", "status": "failed", "statusDetails": {"message": "AssertionError: None\nassert 28.26 == 28.260000000000005\n +  where 28.260000000000005 = float(28.260000000000005)\n +    where 28.260000000000005 = <bound method Discount.pay_amount of <base.discount_rule.Discount object at 0x0375D690>>()\n +      where <bound method Discount.pay_amount of <base.discount_rule.Discount object at 0x0375D690>> = <base.discount_rule.Discount object at 0x0375D690>.pay_amount\n", "trace": "  File \"D:\\Users\\ASUS\\project\\yzg_ui\\testcase\\test_self_pay.py\", line 115, in test_order_pay\n    assert pay_amt == float(dis_rule.pay_amount()), log.error(U'支付金额错误')\n"}, "start": 1645107067117, "stop": 1645107071687}], "attachments": [{"name": "失败用例截图:test_order_pay20220217221111.png", "source": "ad9f6680-4aed-4c30-ad14-60f739c07995-attachment.png", "type": "image/png"}, {"name": "log", "source": "74492def-3ca6-4748-8b8e-94a3587dba98-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "hq_config", "value": "{'canUseCashCoupon:1': {'canUseCashCoupon': 1, 'isBalabceDiscount': 1, 'privilegeType': 1, 'specialDiscountType': 1, 'upgradePointCalculateType': 0, 'useGradeOrSpecialDisAmt': 2}}"}, {"name": "case", "value": "{'油枪选择': 1, '金额': 98, '优惠设置': [{'canUseCashCoupon:1': {'canUseCashCoupon': 1, 'isBalabceDiscount': 1, 'privilegeType': 1, 'specialDiscountType': 1, 'upgradePointCalculateType': 0, 'useGradeOrSpecialDisAmt': 2}}], '会员名': '马锈南', '手机号': 13882130978}"}], "start": 1645107067063, "stop": 1645107071688, "uuid": "f4da3c7e-2cf7-4c75-8d2b-b7f26ab4e233", "historyId": "c227e027f97ef9380cf913b866df31ee", "testCaseId": "78090241c2cd8503592a7b953639fbe3", "fullName": "testcase.test_self_pay.TestSelfPay#test_order_pay", "labels": [{"name": "feature", "value": "微信自助买单"}, {"name": "story", "value": "自助买单--订单支付"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_self_pay"}, {"name": "subSuite", "value": "TestSelfPay"}, {"name": "host", "value": "DESKTOP-76EB9HC"}, {"name": "thread", "value": "19120-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_self_pay"}]}